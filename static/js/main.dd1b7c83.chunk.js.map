{"version":3,"sources":["component/HeaderDisplay.js","component/allList.js","component/BottomNavigation.js","component/addIncomeModal.js","component/addExpenseModal.js","component/openingBalanceModal.js","view/Home.js","App.js","serviceWorker.js","index.js"],"names":["HeaderDisplay","props","classes","useStyles","useState","balance","income","expense","data","setData","useEffect","Ldata","tempInc","tempExp","balanceSheet","inc_exp","length","forEach","el","type","parseInt","amount","Paper","elevation","className","root","Grid","container","item","xs","Typography","variant","gutterBottom","toString","replace","IconButton","onClick","resetAll","style","color","makeStyles","theme","borderRadius","padding","backgroundColor","position","zIndex","width","SimpleList","List","component","map","i","tempDt","Date","date","ListItem","button","key","Math","random","ListItemText","secondary","getDate","getMonth","getFullYear","sheetEntry","details","ListItemIcon","deleteItem","bind","Divider","CircularProgress","palette","background","paper","paddingTop","paddingBottom","fontSize","fontWeight","NoData","text","spacing","list","marginBottom","subheader","appBar","top","bottom","alignItems","display","margin","justifyContent","BottomAppBar","Fragment","CssBaseline","AppBar","Toolbar","Button","marginRight","initateModal","grow","AddIncome","expenseDetails","setExpenseDetails","updateDetailsHandler","event","persist","target","value","Dialog","open","modalStatus","onClose","handleModalStatus","aria-labelledby","aria-describedby","DialogTitle","id","autoComplete","onSubmit","preventDefault","addExpense","error","DialogContent","TextField","required","onChange","effect","noEffect","label","DialogActions","borderColor","AddExpense","min","OpeningBalance","setAmount","addOpeningBalance","helperText","Home","openModelAddIncome","setAddIncomeModal","openModalAddExpense","setAddExpenseModal","openModalOpeningBal","setOpeningModal","JSON","parse","localStorage","getItem","updateSuccess","errorLowBalance","accountDetails","setAccountDetails","setItem","stringify","addExpenseHandler","accountData","tempExpense","Object","assign","push","tempIncome","openModalHandler","epxType","handleCloseSnackbar","removeItem","temp","total","splice","Snackbar","snackbar","autoHideDuration","severity","Alert","breakpoints","down","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dd1b7c83.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst HeaderDisplay = (props) => {\n    const classes = useStyles();\n    const[data, setData] = useState({\n      balance: null,\n      income: null,\n      expense: null\n    });\n\n  useEffect(()=>{\n    setData((Ldata)=>{\n      let tempInc = 0;\n      let tempExp = 0;\n      if(props.balanceSheet.inc_exp.length>0)\n      {\n        props.balanceSheet.inc_exp.forEach(el=>{\n                  if(el.type === 'income')\n                    tempInc += parseInt(el.amount)\n                  else\n                    tempExp += parseInt(el.amount)\n        })\n      } \n      return{\n        ...Ldata,\n        balance: props.balanceSheet.balance,\n        income: tempInc,\n        expense: tempExp\n      }\n;    });\n  },[props.balanceSheet]);\n\n  return (\n    <div>\n      <Paper elevation={3} className={classes.root}>\n        <Grid container>\n          <Grid item xs={12}>\n            <span>Balance</span>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography variant=\"h3\" gutterBottom> {data.balance > 0 && data.balance.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')} CZK</Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton onClick={props.resetAll}><OfflineBoltIcon style={{color:'#FFF'}}/></IconButton>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              <span style={{color:'#6DE23A'}}>Income {data.income > 0 && data.income.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')} KC</span><br/>\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              <span style={{color:'#F9615F'}}>Spendings {data.expense >0 && data.expense.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')} KC</span>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default HeaderDisplay;\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius:0,\n    padding: '20px 10px',\n    backgroundColor:'#3f51b5',\n    color:'#FFF',\n    position:'fixed',\n    zIndex:'1',\n    width:'100%'\n  },\n}));","import React,{useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst SimpleList = (props) => {\n\n  const classes = useStyles();\n  const[data, setData] = useState({});\n\n  useEffect(()=>{\n    setData(props.balanceSheet);\n  },[props.balanceSheet]);\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\">\n        {data.inc_exp ? data.inc_exp.length > 0 ? data.inc_exp.map((el,i) => {\n          const tempDt = new Date(el.date.toString());\n          return (\n            <ListItem button key={`${Math.random()}${el.date.toString()}`}>\n            <ListItemText secondary={`${tempDt.getDate()}.${tempDt.getMonth()+1}.${tempDt.getFullYear()}`}><span className={`${classes.sheetEntry} ${el.type === 'income' ? classes.income : classes.expense}` }>{el.amount.replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')} KC</span></ListItemText>\n            <ListItemText>{el.details}</ListItemText>\n            <ListItemIcon>\n              <DeleteIcon onClick={props.deleteItem.bind(this,i,el.type)}/>\n            </ListItemIcon>\n            <Divider />\n          </ListItem>)\n        }) : <ListItem><span>No Data to Show</span></ListItem> : <CircularProgress color=\"secondary\" />}\n      </List>\n    </div>\n  );\n}\n\nexport default SimpleList;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    paddingTop:'180px',\n    paddingBottom: '50px',\n  },\n  sheetEntry:{\n    fontSize:'1.5rem',\n    fontWeight:'bold'\n  },\n  income:{\n    color:'#6DE23A',\n  },\n  expense:{\n    color:'#BB312F'\n  },\n  NoData:{\n    color:'#EA4B49'\n  }\n}));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    alignItems:'center',\n    display:'flex',\n    padding:0,\n    margin:0,\n    justifyContent:'center'\n  }\n}));\n\nconst BottomAppBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n            <Button variant=\"contained\" style={{backgroundColor:'#43a047', color:'#FFF', marginRight:'50px'}} onClick={props.initateModal.bind(this,'income')}>Add Income</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.initateModal.bind(this,'expense')}>Add Spending</Button>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default BottomAppBar;\n","import React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AddIncome = (props) => {\n    const classes = useStyles();\n    const [expenseDetails, setExpenseDetails] = useState({\n        date: new Date(),\n        type: 'income',\n        amount: 0,\n        details:'',\n    });\n\n    const updateDetailsHandler = (event,type) => {\n        event.persist();\n        if(type === 'date')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    date: event.target.value\n                }\n            });\n        if(type === 'amount')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    amount: event.target.value\n                }\n        });\n        if(type === 'details')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    details: event.target.value\n                }\n        });\n    }   \n\nconst incomeFormHandler = (event) => {\n    event.preventDefault();\n    if(expenseDetails.amount > 0)\n    {\n      props.addExpense(expenseDetails);\n      setExpenseDetails({\n        type: 'income',\n        date: new Date(),\n        amount: 0,\n        details: ''\n      });\n      props.handleModalStatus('income');\n    } else {\n      setExpenseDetails((data)=>{\n        return {\n          ...data,\n          amount: 0,\n          error: true\n        }\n      });\n    }\n}\n\n  return (\n    <div>\n      <Dialog\n        open={props.modalStatus}\n        onClose={props.handleModalStatus.bind(this,'income')}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add Income\"}</DialogTitle>\n        <form autoComplete=\"off\" onSubmit={incomeFormHandler}>\n        <DialogContent className={classes.root}>\n        <TextField id=\"outlined-basic\" required type='date' variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'date')} value={expenseDetails.date}/>\n        <TextField className={(parseInt(expenseDetails.amount) === 0 || expenseDetails.amount === '') ? `${classes.effect}`: `${classes.noEffect}`} id=\"outlined-basic\" label=\"Amount\" required type='number' variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'amount')} value={expenseDetails.amount} />  \n        <TextField id=\"outlined-basic\" label=\"Details\" required type='text' variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'details')} value={expenseDetails.details}/>\n        </DialogContent>\n        <DialogActions>\n          <Button type='submit' color=\"primary\">\n            Save\n          </Button>\n          <Button onClick={props.handleModalStatus.bind(this,'income')} color=\"primary\">\n            Cancle\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddIncome;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  effect:{\n    '& .MuiOutlinedInput-root': {\n      '&.Mui-focused fieldset': {\n        borderColor: 'red',\n      },\n      '& fieldset': {\n        borderColor: 'red',\n      }\n    }\n  },\n  noEffect:{\n    color:'#333'\n  }\n}));\n","import React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AddExpense = (props) => {\n    const classes = useStyles();\n    const [expenseDetails, setExpenseDetails] = useState({\n        type:'expense',\n        date: new Date(),\n        amount: 0,\n        details:''\n    });\n\n    const updateDetailsHandler = (event,type) => {\n        event.persist();\n        if(type === 'date')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    date: event.target.value\n                }\n            });\n        if(type === 'amount')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    amount: event.target.value\n                }\n        });\n        if(type === 'details')\n            setExpenseDetails((data)=> {\n                return{\n                    ...data,\n                    details: event.target.value\n                }\n        });\n    }   \n\nconst expenseFormHandler = (event) => {\n    event.preventDefault();\n    if(expenseDetails.amount > 0)\n    {\n      props.handleModalStatus('expense');\n      props.addExpense(expenseDetails);\n      setExpenseDetails({\n        type:'expense',\n        date: new Date(),\n        amount: 0,\n        details: ''\n    });\n    } else {\n      setExpenseDetails((data)=>{\n        return {\n          ...data,\n          amount: 0,\n      }\n      });\n    }\n}\n\n  return (\n    <div>\n      <Dialog\n        open={props.modalStatus}\n        onClose={props.handleModalStatus.bind(this,'expense')}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add Expense\"}</DialogTitle>\n        <form autoComplete=\"off\" onSubmit={expenseFormHandler}>\n        <DialogContent className={classes.root}>\n          <TextField id=\"outlined-basic\" required type='date' variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'date')} value={expenseDetails.date}/>\n          <TextField id=\"outlined-basic\" className={(parseInt(expenseDetails.amount) === 0 || expenseDetails.amount === '') ? `${classes.effect}` : `${classes.noEffect}`} label=\"Amount\" required type='number' min=\"1\" variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'amount')} value={expenseDetails.amount}/>\n          <TextField id=\"outlined-basic\" label=\"Details\" required type='text' variant=\"outlined\" onChange={(event) => updateDetailsHandler(event,'details')} value={expenseDetails.details}/>\n        </DialogContent>\n        <DialogActions>\n          <Button type='submit' color=\"primary\">\n            Save\n          </Button>\n          <Button onClick={props.handleModalStatus.bind(this,'expense')} color=\"primary\">\n            Cancle\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddExpense;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n\neffect:{\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: 'red',\n    },\n    '& fieldset': {\n      borderColor: 'red',\n    }\n  }\n},\nnoEffect:{\n  color:'#333'\n}\n}));\n","import React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\nconst OpeningBalance = (props) => {\n    const classes = useStyles();\n    const [amount, setAmount] = useState(0);\n\n    const updateDetailsHandler = (event) => {\n       if(event.target.value >= 0 )\n          setAmount(event.target.value)\n    }   \n\nconst incomeFormHandler = (event) => {\n    event.preventDefault();\n    props.addOpeningBalance(amount);\n    setAmount(0);\n}\n\n  return (\n    <div>\n      <Dialog\n        open={props.modalStatus}\n        onClose={props.handleModalStatus.bind(this,'expense')}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add Opening Balance\"}</DialogTitle>\n        <form autoComplete=\"off\" onSubmit={incomeFormHandler}>\n        <DialogContent className={classes.root}>\n          <TextField id=\"outlined-basic\" label=\"Amount\" required type='number'\n          variant=\"outlined\" onChange={updateDetailsHandler} value={amount}\n          helperText=\"If no balance provided, account opening balance will be 0\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button type='submit' onClick={props.handleModalStatus.bind(this,'openingBalance')} color=\"primary\">\n            Save\n          </Button>\n          <Button onClick={props.handleModalStatus.bind(this,'openingBalance')} color=\"primary\">\n            Cancle\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default OpeningBalance;\n","import React, { useState, useEffect } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n/** SPA Custom Components */\nimport Header from '../component/HeaderDisplay';\nimport ListItems from '../component/allList';\nimport BottomMenu from '../component/BottomNavigation';\nimport AddItemModal from '../component/addIncomeModal';\nimport AddExpenseModal from '../component/addExpenseModal';\nimport OpeningBalance from '../component/openingBalanceModal';\n\nconst Home = () => {\n    const classes = useStyles();\n    const[openModelAddIncome, setAddIncomeModal] = useState(false);\n    const[openModalAddExpense, setAddExpenseModal] = useState(false);\n    const[openModalOpeningBal, setOpeningModal] = useState(false);\n    const [accountDetails, setAccountDetails] = useState(\n        JSON.parse(localStorage.getItem('accountData')) || {\n        balance: null,\n        inc_exp:[],\n        updateSuccess: false,\n        errorLowBalance: false\n    });\n\n    useEffect(() => {\n        localStorage.setItem('accountData', JSON.stringify(accountDetails));\n        \n        if(accountDetails.balance === null)\n        {\n            setOpeningModal(!openModalOpeningBal);\n        }\n    },[accountDetails]);\n\n    const addExpenseHandler = (data) => {\n        if(data.type === 'expense' && accountDetails.balance < data.amount)\n        {\n            return setAccountDetails((accountData)=>{\n                return {...accountData,\n                        errorLowBalance: true\n                    }\n            });\n        }\n        if(data.type === 'expense')\n        {\n            return setAccountDetails((accountData)=> {\n                const tempExpense = Object.assign([], accountData.inc_exp);\n                tempExpense.push({...data})\n                return {\n                    ...accountData,\n                    balance: accountData.balance - parseInt(data.amount),\n                    inc_exp: tempExpense,\n                    updateSuccess: true\n                }\n            })\n        } \n        else if(data.type === 'income')\n        {\n            return setAccountDetails((accountData)=> {\n                const tempIncome = Object.assign([], accountData.inc_exp);\n                tempIncome.push({...data})\n                return {\n                    ...accountData,\n                    balance: accountData.balance + parseInt(data.amount),\n                    inc_exp: tempIncome,\n                    updateSuccess: true\n                }\n            })\n        }\n    }\n    const openModalHandler = (epxType) => {\n        if(epxType === 'income')\n            setAddIncomeModal(!openModelAddIncome)\n        else if(epxType === 'expense')\n            setAddExpenseModal(!openModalAddExpense)\n        else if(epxType === 'openingBalance')\n            {\n                setOpeningModal(!openModalOpeningBal);\n                setAccountDetails((accountData)=> {\n                    return {\n                        ...accountData,\n                        balance: 0,\n                    }\n                })\n            }\n    }\n\n    const handleCloseSnackbar = (type) => {\n        if(type === 'low balance')\n            setAccountDetails((accountData)=>{\n                return {\n                    ...accountData,\n                    errorLowBalance: false\n                }\n            });\n        if(type === 'success')\n            setAccountDetails((accountData)=>{\n                return {\n                    ...accountData,\n                    updateSuccess: false\n                }\n            });\n    }\n\n    const addOpeningBalanceHanlder = (amount) => {\n        setAccountDetails((data)=>{\n            return{\n                ...data,\n                balance: parseInt(amount)\n            }\n        });\n    }\n\n    const resetHandler = () => {\n        localStorage.removeItem('accountData'); \n        setAccountDetails({\n            balance: null,\n            inc_exp:[],\n            updateSuccess: false,\n            errorLowBalance: false\n        });\n    }\n\n    const deleteItemHandler = (position, type) => {\n        setAccountDetails((data)=>{\n            const temp = Object.assign([],data.inc_exp);\n            let total = data.balance;\n            if(type === 'income')\n            {\n                total -= parseInt(temp[position].amount);\n            } else{\n                total += parseInt(temp[position].amount);\n            }\n            temp.splice(position,1);\n            return{\n                ...data,\n                balance:total,\n                inc_exp: temp\n            }\n        }); \n    }\n\n    return(<React.Fragment>\n            <Header balanceSheet={accountDetails} resetAll={resetHandler}/>\n                <ListItems balanceSheet={accountDetails} deleteItem={deleteItemHandler}/>\n            <BottomMenu initateModal={openModalHandler}/>\n            {/** Models and Snackbar */}\n            <AddItemModal modalStatus={openModelAddIncome} handleModalStatus={openModalHandler} addExpense={addExpenseHandler}/>\n            <AddExpenseModal modalStatus={openModalAddExpense} handleModalStatus={openModalHandler} addExpense={addExpenseHandler}/>\n            <OpeningBalance modalStatus={openModalOpeningBal} addOpeningBalance={addOpeningBalanceHanlder} handleModalStatus={openModalHandler} />\n            <Snackbar className={classes.snackbar} open={accountDetails.errorLowBalance} autoHideDuration={6000} onClose={() => handleCloseSnackbar('low balance')}>\n                <Alert onClose={() => handleCloseSnackbar('low balance')} severity=\"error\">\n                Can't add expense, low account balance !!!\n                </Alert>\n            </Snackbar>\n            <Snackbar className={classes.snackbar} open={accountDetails.updateSuccess} autoHideDuration={6000} onClose={() => handleCloseSnackbar('success')}>\n                <Alert onClose={() => handleCloseSnackbar('success')} severity=\"success\">\n                Account updated successfully !!!\n                </Alert>\n            </Snackbar>\n        </React.Fragment>)\n};\n\nexport default Home;\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    snackbar: {\n      [theme.breakpoints.down('lg')]: {\n        bottom: 150,\n      },\n    },\n  }));\n  ","import React from 'react';\nimport Home from './view/Home';\n\nfunction App() {\n  return (\n      <React.Fragment><Home/></React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}